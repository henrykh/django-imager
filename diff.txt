diff --git a/imager_images/forms.py b/imager_images/forms.py
index 824364d..71114f6 100644
--- a/imager_images/forms.py
+++ b/imager_images/forms.py
@@ -48,8 +48,12 @@ class AlbumAddViewForm(ModelForm):
 
     class Meta:
         model = Album
-        fields = ['user', 'title', 'description', 'published']
         widgets = {'user': forms.HiddenInput, }
+        fields = ('user',
+                  'title',
+                  'description',
+                  'published',
+                  )
 
 
 class AlbumUpdateViewForm(ModelForm):
diff --git a/imager_images/templates/albumphoto_list.html b/imager_images/templates/albumphoto_list.html
index fd2f38f..abc50fb 100644
--- a/imager_images/templates/albumphoto_list.html
+++ b/imager_images/templates/albumphoto_list.html
@@ -12,6 +12,8 @@
 {% block title %}Album: {{user}}{% endblock %}
 
 {% block body %}
+<h3>{{album.title}}</h3>
+<h3><a href="{% url 'images:album_update' album.pk %}?src={{source}}">Update</a></h3>
     <div id="profileInfo">
         <ul id="gallery"> 
             {% for photo in photos %}
diff --git a/imager_images/views.py b/imager_images/views.py
index 8cef606..3f7d095 100644
--- a/imager_images/views.py
+++ b/imager_images/views.py
@@ -42,10 +42,12 @@ def library(request):
 
 @login_required
 def AlbumPhotoList(request, pk):
+    # import ipdb; ipdb.set_trace()
     context = {'photos': Photo.objects
                .filter(user=request.user)
                .filter(albums__pk=pk),
-               'source': request.META['PATH_INFO']
+               'source': request.META['PATH_INFO'],
+               'album': Photo.albums.through.album.get_queryset().filter(pk=pk)[0],
                }
     return render(request, 'albumphoto_list.html', context)
 
@@ -95,9 +97,6 @@ class AlbumUpdateView(UpdateView):
     model = Album
     form_class = AlbumUpdateViewForm
 
-    def get_success_url(self):
-        return reverse('images:library')
-
     def user_passes_test(self, request):
         if request.user.is_authenticated():
             self.object = self.get_object()
@@ -110,9 +109,13 @@ class AlbumUpdateView(UpdateView):
         return super(AlbumUpdateView, self).dispatch(
             request, *args, **kwargs)
 
+    def get_success_url(self):
+        return self.request.GET['src']
+
 
 class AlbumDeleteView(DeleteView):
     model = Album
+    template_name = 'photo_confirm_delete.html'
 
     def user_passes_test(self, request):
         if request.user.is_authenticated():
@@ -126,19 +129,14 @@ class AlbumDeleteView(DeleteView):
         return super(AlbumDeleteView, self).dispatch(
             request, *args, **kwargs)
 
+    def get_success_url(self):
+        return reverse('images:library')
+
 
 class PhotoAddView(CreateView):
-    template_name = "new_photo_form.html"
     model = Photo
     form_class = PhotoAddViewForm
-
     template_name = 'photo_form.html'
-    model = Photo
-    fields = ('image',
-              'title',
-              'description',
-              'published',
-              )
 
     def get_form_kwargs(self):
         kwargs = super(PhotoAddView, self).get_form_kwargs()
@@ -150,9 +148,8 @@ class PhotoAddView(CreateView):
 
 
 class PhotoUpdateView(UpdateView):
-
-    form_class = PhotoUpdateViewForm
     model = Photo
+    form_class = PhotoUpdateViewForm
     template_name = 'photo_form.html'
 
     def user_passes_test(self, request):
